{
	"Svelte Import": {
		"prefix": "$import",
		"body": [
			"import { ${1} } from \"svelte\";"
		],
		"description": "Svelte Import"
	},
	"Svelte Transition Import": {
		"prefix": "$transition",
		"body": [
			"import { ${1} } from \"svelte/transition\";"
		],
		"description": "Svelte Transition Import"
	},
	"Svelte Animate Import": {
		"prefix": "$animate",
		"body": [
			"import { ${1} } from \"svelte/animate\";"
		],
		"description": "Svelte Animate Import"
	},
	"Svelte Easing Import": {
		"prefix": "$easing",
		"body": [
			"import { ${1} } from \"svelte/easing\";"
		],
		"description": "Svelte Easing Import"
	},
	"Svelte Motion Import": {
		"prefix": "$motion",
		"body": [
			"import { ${1} } from \"svelte/motion\";"
		],
		"description": "Svelte Motion Import"
	},
	"Svelte Store Import": {
		"prefix": "$store",
		"body": [
			"import { ${1} } from \"svelte/store\";"
		],
		"description": "Svelte Store Import"
	},
	"Svelte Internal Import": {
		"prefix": "$internal",
		"body": [
			"import { ${1} } from \"svelte/internal\";"
		],
		"description": "Svelte Internal Import"
	},
	"Svelte Reactive": {
		"prefix": "$$",
		"body": [
			"$: ${1} = ${2};"
		],
		"description": "Svelte Reactive"
	},
	"Svelte Reactive if": {
		"prefix": "$$if",
		"body": [
			"$: if (${1:condition}) {",
			"\t${2}",
			"}"
		],
		"description": "Svelte Reactive if"
	},
	"Svelte Reactive block": {
		"prefix": "$$block",
		"body": [
			"$: {",
			"\t${1}",
			"}"
		],
		"description": "Svelte Reactive block"
	},
	"Svelte onMount": {
		"prefix": "$onmount",
		"body": [
			"onMount(() => {",
			"\t${1}",
			"});"
		],
		"description": "Svelte onMount"
	},
	"Svelte onDestroy": {
		"prefix": "$ondestroy",
		"body": [
			"onDestroy(() => {",
			"\t${1}",
			"});"
		],
		"description": "Svelte onDestroy"
	},
	"Svelte beforeUpdate": {
		"prefix": "$beforeupdate",
		"body": [
			"beforeUpdate(() => {",
			"\t${1}",
			"});"
		],
		"description": "Svelte beforeUpdate"
	},
	"Svelte afterUpdate": {
		"prefix": "$afterupdate",
		"body": [
			"afterUpdate(() => {",
			"\t${1}",
			"});"
		],
		"description": "Svelte afterUpdate"
	},
	"Svelte Writable": {
		"prefix": "$writable",
		"body": [
			"import { writable } from \"svelte/store\";",
			"",
			"export const ${1} = writable(${2});"
		],
		"description": "Svelte Writable"
	},
	"Svelte Readable": {
		"prefix": "$readable",
		"body": [
			"import { readable } from \"svelte/store\";",
			"",
			"export const ${1} = readable(${2}, function start(set) {",
			"\t${3}",
			"",
			"\treturn function stop() {",
			"\t\t${4}",
			"\t};",
			"});"
		],
		"description": "Svelte Readable"
	},
	"Svelte State": {
		"prefix": "$state",
		"body": [
			"let ${1} = \\$state(${2});"
		],
		"description": "Svelte State"
	},
	"Svelte State Raw": {
		"prefix": "$stateraw",
		"body": [
			"let ${1} = \\$state.raw(${2});"
		],
		"description": "Svelte State Raw"
	},
	"Svelte Derived": {
		"prefix": "$derived",
		"body": [
			"let ${1} = \\$derived(${2});"
		],
		"description": "Svelte Derived"
	},
	"Svelte Derived By": {
		"prefix": "$derivedby",
		"body": [
			"let ${1} = \\$derived.by(() => {",
			"\t${2}",
			"});",
		],
		"description": "Svelte Derived By"
	},
	"Svelte Effect": {
		"prefix": "$effect",
		"body": [
			"\\$effect(() => {",
			"\t${1}",
			"});",
		],
		"description": "Svelte Effect"
	},
	"Svelte Effect Pre": {
		"prefix": "$effectpre",
		"body": [
			"\\$effect.pre(() => {",
			"\t${1}",
			"});",
		],
		"description": "Svelte Effect Pre"
	},
	"Svelte Props": {
		"prefix": "$props",
		"body": [
			"let { ${1} } = \\$props();"
		],
		"description": "Svelte Props"
	},
	"Svelte Bindable": {
		"prefix": "$bindable",
		"body": [
			"let { ${1} = \\$bindable(${2}) } = \\$props();"
		],
		"description": "Svelte Bindable"
	},
	"Svelte Inspect": {
		"prefix": "$inspect",
		"body": [
			"\\$inspect(${1});"
		],
		"description": "Svelte Inspect"
	},
	"Svelte Inspect With": {
		"prefix": "$inspectwith",
		"body": [
			"\\$inspect(${1}).with(${2});"
		],
		"description": "Svelte Inspect With"
	},
	"Svelte Action": {
		"prefix": "$action",
		"body": [
			"function ${1:foo}(node) {",
			"\treturn {",
			"\t\tdestroy() {",
			"\t\t\t${2}",
			"\t\t}",
			"\t};",
			"}"
		],
		"description": "Svelte Action"
	},
	"Svelte Action Params": {
		"prefix": "$action-params",
		"body": [
			"function ${1:foo}(node, parameters) {",
			"\treturn {",
			"\t\tdestroy() {",
			"\t\t\t${2}",
			"\t\t}",
			"\t};",
			"}"
		],
		"description": "Svelte Action Params"
	},
	"Svelte Action Params Update": {
		"prefix": "$action-params-update",
		"body": [
			"function ${1:foo}(node, parameters) {",
			"\treturn {",
			"\t\tupdate(parameters) {",
			"\t\t\t${2}",
			"\t\t},",
			"\t\tdestroy() {",
			"\t\t\t${3}",
			"\t\t}",
			"\t};",
			"}"
		],
		"description": "Svelte Action Params Update"
	},
	"Svelte Tick": {
		"prefix": "$tick",
		"body": [
			"await tick();"
		],
		"description": "Svelte Tick"
	},
	"Svelte Get Context": {
		"prefix": "$get-context",
		"body": [
			"getContext(${1})"
		],
		"description": "Svelte Get Context"
	},
	"Svelte Set Context": {
		"prefix": "$set-context",
		"body": [
			"setContext(${1})"
		],
		"description": "Svelte Set Context"
	},
	"Svelte Dispatch": {
		"prefix": "$dispacth",
		"body": [
			"const ${1:dispatch} = createEventDispatcher();"
		],
		"description": "Svelte Dispatch"
	},
	"Svelte Dispatch Event": {
		"prefix": "$dispacth-event",
		"body": [
			"dispatch(${1:key},${2:data});"
		],
		"description": "Svelte Dispatch Event"
	},
	"Svelte Get Store Value": {
		"prefix": "$get-store",
		"body": [
			"const ${1:} = get(${2:});"
		],
		"description": "Svelte Get Store Value"
	},
	"Svelte Snapshot": {
		"prefix": "$snapshot",
		"body": [
			"\\$state.snapshot(${1});"
		],
		"description": "Svelte Snapshot"
	},
	"Svelte Untrack": {
		"prefix": "$untrack",
		"body": [
			"untrack(${1})"
		],
		"description": "Svelte Untrack"
	},
	"Svelte Reactivity Import": {
		"prefix": "$reactivity",
		"body": [
			"import { ${1} } from \"svelte/reactivity\";"
		],
		"description": "Svelte Reactivity Import"
	}
}